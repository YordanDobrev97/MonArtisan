@{
    Layout = null;
}

<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4="
            crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"
            integrity="sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU="
            crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://pro.fontawesome.com/releases/v5.10.0/css/all.css" integrity="sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p" crossorigin="anonymous" />
    <link rel="stylesheet" href="~/css/chat.css" />
    <script src="~/lib/signalr/dist/browser/signalr.min.js"></script>

    <style>
        .fa-arrow-alt-circle-left {
            font-size: 36px;
            margin: 3px 45px;
        }
    </style>
</head>

<form method="post"></form>

<div class="chat-container">
    <aside class="chat-aside">

        @foreach (var user in Model.Users)
        {
            <div class="chat-user">
                <img class="chat-user-image" src="https://icons-for-free.com/iconfiles/png/512/person-1324760545186718018.png" />
                <h2>
                    @user.Client - @user.Professional
                    <button onclick="getMessages('@user.ClientId', '@user.ProfessionalId')">Get Messages</button>
                </h2>
            </div>
        }


        @{ 
            var linkToController = this.User.IsInRole("Client") ? "Clients" : "ProfessionalFeed";
        }
        <div>
            <a style="color: white; margin: 50px;" asp-area="" asp-controller="@linkToController" asp-action="Index">
                <i class="far fa-arrow-alt-circle-left"></i>
            </a>
        </div>

        <div class="pagination-btns">
            <button>
                <i class="fas fa-angle-left"></i>
            </button>
            <button>
                <i class="fas fa-angle-right"></i>
            </button>
        </div>
    </aside>

    <div class="main-chat">
        <main class="messages">
            <div class="container-message">
            </div>

            <div class="send-message-container">
                <input type="text" class="textarea" placeholder="your message" />
                <button id="sendButton" class="send-message-btn">
                    <i class="fa fa-paper-plane" aria-hidden="true"></i>
                </button>
            </div>
        </main>
    </div>
</div>

<span style="display: none;" id="clientId"></span>
<span style="display: none;" id="professionalId"></span>


<script>
    function getMessages(clientId, professionalId) {
        const token = $('input[name=__RequestVerificationToken]').val();
        const data = JSON.stringify({ clientId: clientId, professionalId: professionalId });

        document.getElementById('clientId').textContent = clientId;
        document.getElementById('professionalId').textContent = professionalId;

        $.ajax({
            type: 'post',
            url: '/api/Chat/StartChat',
            data: data,
            contentType: 'application/json',
            dataType: 'json',
            headers: {
                "X-CSRF": token,
            },
            success: (messages) => {
                document.querySelector('.container-message').textContent = '';
                if (messages == 'No have messages!') {
                    const messageContainer = document.createElement('div');
                    messageContainer.textContent = messages;
                    document.querySelector('.container-message').appendChild(messageContainer);
                } else {
                    messages.forEach((message, index) => {
                        const messageContainer = document.createElement('div');
                        messageContainer.style.display = 'flex'

                        let user = ''
                        let backgroundColor = '';
                        if (index % 2 == 0) {
                            user = message.reciver;
                            backgroundColor = '#82CFDF';
                            messageContainer.style.justifyContent = 'flex-start';
                        } else {
                            user = message.sender;
                            backgroundColor = '#6DD984';
                            messageContainer.style.justifyContent = 'flex-end';
                        }

                        const p = document.createElement('p');
                        p.textContent = `${user}: `;

                        const currentMessage = document.createElement('p');
                        currentMessage.textContent = `[${message.messageContent}]`;

                        //messageContainer.textContent = `${user} - ${message.messageContent}`;
                        messageContainer.style.background = backgroundColor;
                        messageContainer.appendChild(p);
                        messageContainer.appendChild(currentMessage);
                        document.querySelector('.container-message').appendChild(messageContainer);
                    })
                }
            },
        })
    }
</script>

<script>
    var connection =
        new signalR.HubConnectionBuilder()
            .withUrl("/messenger")
            .build();

    connection.on("NewMessage",
        function (message) {
            const container = $('.container-message');
            const chatMessage = document.createElement('div');
            chatMessage.textContent = `${escapeHtml(message.message)}`;
            console.log(chatMessage);
            container.append(chatMessage);
        });


    $("#sendButton").click(function () {
        var message = $(".textarea").val();
        const clientId = document.getElementById('clientId').textContent;
        const professionalId = document.getElementById('professionalId').textContent;
        connection.invoke("Send", message, clientId, professionalId);
        $(".textarea").val("");
    });

    connection.start().catch(function (err) {
        return console.error(err.toString());
    });
    function escapeHtml(unsafe) {
        return unsafe
            .replace(/&/g, "&amp;")
            .replace(/</g, "&lt;")
            .replace(/>/g, "&gt;")
            .replace(/"/g, "&quot;")
            .replace(/'/g, "&#039;");
    }
</script>